syntax = "proto3";

package epaxos;

service EpaxosService {
    rpc write(WriteRequest) returns (WriteResponse);
    rpc read(ReadRequest) returns (ReadResponse);
    rpc pre_accept(PreAccept) returns (PreAcceptOK);
    rpc commit(Commit) returns (Empty);
}

message WriteRequest {
    string key = 1;
    int32 value = 2;
}

message WriteResponse {
    bool ack = 1;
}

message ReadRequest {
    string key = 1;
}

message ReadResponse {
    int32 value = 1;
}

message Command {
    oneof ClientRequest {
        WriteRequest write_req = 1;
        ReadRequest read_req = 2;
    }
    int32 seq = 3;
    repeated Command deps = 4;
    oneof ReplicaMessage {
        PreAccept pre_accept = 5;
        PreAcceptOK pre_accept_ok = 6;
        Commit commit = 7;
    }
}

message PreAccept {
    oneof ClientRequest {
        WriteRequest write_req = 1;
        ReadRequest read_req = 2;
    }
    int32 seq = 3;
    repeated Command deps = 4;
    int32 instance_number = 5;
}

message PreAcceptOK {
    oneof ClientRequest {
        WriteRequest write_req = 1;
        ReadRequest read_req = 2;
    }
    int32 seq = 3;
    repeated Command deps = 4;
    int32 instance_number = 5;
}

message Commit {
    oneof ClientRequest {
        WriteRequest write_req = 1;
        ReadRequest read_req = 2;
    }
    int32 seq = 3;
    repeated Command deps = 4;
    int32 instance_number = 5;
}

message Empty {

}